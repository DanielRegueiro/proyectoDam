package controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import data.LogicaPrincipal;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Text;
import javafx.stage.Stage;





public class ControllerFXMLPantallaImpresionListas {

    @FXML
    private Button botonPdf;
    @FXML
    private ListView<modeloVista.Unidad> listas;
	private List<modeloVista.Unidad> listaUnidades;
    
    void initData(List<modeloVista.Unidad> lista) {
    listaUnidades=lista;
	ObservableList<modeloVista.Unidad> data = FXCollections.observableArrayList();
	data.addAll(listaUnidades);
	listas.getItems().addAll(data);
	listas.setCellFactory(unidadesListView -> new CellpersonalozadoUnidadIndividual());
    }


	@FXML
	void imprimirAPdf(ActionEvent event) {
		
		
	}


    @FXML
    void volver(ActionEvent event) {
    	try {
			FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/Vistas/PantallaSeleccionLista.fxml"));
			Parent root3 = (Parent) fxmlLoader.load();
			Stage stage = (Stage) botonPdf.getScene().getWindow();
			stage.setScene(new Scene(root3));
			stage.setResizable(false);
		} catch (IOException ex) {
			Logger.getLogger(ControllerFXMLSeleccionEjercito.class.getName()).log(Level.SEVERE, null, ex);
		}
    }
    @FXML
    void initialize() {
        assert botonPdf != null : "fx:id=\"botonPdf\" was not injected: check your FXML file 'VistaListaDesplegada.fxml'.";
        assert listas != null : "fx:id=\"listas\" was not injected: check your FXML file 'VistaListaDesplegada.fxml'.";
    
    }
    private class CustomListCell extends ListCell<modeloVista.Unidad> {
		private HBox content;
		private Text name;
		private Text price;
		private Text tipo;
		private Text separador;
		public CustomListCell() {
			super();
			name = new Text();
			price = new Text();
			tipo = new Text();
			separador=new Text("      ");
			
			
			VBox vBox = new VBox(name, price, tipo);
			VBox vbox2=new VBox(separador);
			content = new HBox( vbox2,vBox);
			content.setSpacing(100);
		}

		@Override
		protected void updateItem(modeloVista.Unidad item, boolean empty) {
			super.updateItem(item, empty);
			if (item != null && !empty) { // <== test for null item and empty parameter
				name.setText(item.getNombre());
				tipo.setText(item.getTipoUnidad().getDescripcion());
				price.setText(String.format("%d Puntos", item.getPuntos()));
				
				content = new HBox(separador, new VBox(name, price, tipo));
				setGraphic(content);
			} else {
				setGraphic(null);
			}
		}
	}
}
