package controller;

import java.io.IOException;
import java.net.URL;
import java.util.List;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;

import data.LogicaPrincipal;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ListCell;
import javafx.scene.control.ListView;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import modeloVista.Lista;
import modeloVista.Usuario;

public class ControllerPantallaSeleccionListas {

	@FXML // ResourceBundle that was given to the FXMLLoader
	private ResourceBundle resources;

	@FXML // URL location of the FXML file that was given to the FXMLLoader
	private URL location;

	@FXML // fx:id="botonNueva"
	private Button botonNueva; // Value injected by FXMLLoader

	@FXML // fx:id="listas"
	private ListView<Lista> listas; // Value injected by FXMLLoader
	private Usuario usuario;
	private List<modeloVista.Lista> listasUsuario;
	private ControllerFXMLPantallaImpresionListas controller;

	public void cargarListas(List<Lista> listas) {
		this.listasUsuario = listas;

	}

	@FXML
	void crearLista(ActionEvent event) {
		try {

			FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/Vistas/VistaSeleccionTropasAUsar.fxml"));
			Parent root1 = (Parent) fxmlLoader.load();
			Stage stage = new Stage();
			stage.setScene(new Scene(root1));
			stage.setResizable(false);
			stage.initStyle(StageStyle.UNDECORATED);
			stage.centerOnScreen();
			stage.show();

		} catch (IOException ex) {
			Logger.getLogger(ControllerFXMLLogin.class.getName()).log(Level.SEVERE, null, ex);
		}
		Stage stagePrincipal = (Stage) botonNueva.getScene().getWindow();

		stagePrincipal.close();
	}

	@FXML
	void imprimirLista(MouseEvent event) {
		try {
			LogicaPrincipal.getInstance().guardarLista(listasUsuario);
			FXMLLoader fxmlLoader2 = new FXMLLoader(getClass().getResource("/Vistas/VistaListaDesplegada.fxml"));
			Parent root2 = (Parent) fxmlLoader2.load();
			Stage stage = (Stage) botonNueva.getScene().getWindow();
			stage.setScene(new Scene(root2));
			controller = fxmlLoader2.<ControllerFXMLPantallaImpresionListas>getController();
			controller.initData(LogicaPrincipal.getInstance()
					.listaToUnidades(listas.getItems().get(listas.getSelectionModel().getSelectedIndex())));
			stage.setResizable(false);

		} catch (IOException ex) {
			Logger.getLogger(ControllerFXMLSeleccionEjercito.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	@FXML
	void volver(ActionEvent event) {
		try {
			FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("/Vistas/PantallaLogos.fxml"));
			Parent root3 = (Parent) fxmlLoader.load();
			Stage stage = (Stage) botonNueva.getScene().getWindow();
			stage.setScene(new Scene(root3));
			stage.setResizable(false);

		} catch (IOException ex) {
			Logger.getLogger(ControllerFXMLSeleccionEjercito.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	void initData(List<modeloVista.Lista> listasEntrantes, List<modeloVista.Lista> listasRecuperadas) {
		if (listasEntrantes != null) {
			this.usuario = LogicaPrincipal.getInstance().getUser();
			ObservableList<modeloVista.Lista> data = FXCollections.observableArrayList();
			listasUsuario = listasEntrantes;

			for (modeloVista.Lista ud : listasUsuario) {
				data.add(ud);
			}
			listas.getItems().addAll(data);
			listas.setCellFactory(unidadesListView -> new CeldaListas());
		} else {
			ObservableList<modeloVista.Lista> data = FXCollections.observableArrayList();
			listasUsuario = listasRecuperadas;

			for (modeloVista.Lista ud : listasUsuario) {
				data.add(ud);
			}
			listas.getItems().addAll(data);
			listas.setCellFactory(unidadesListView -> new CeldaListas());
		}
		
	}

	@FXML
	void initialize() {

		assert botonNueva != null : "fx:id=\"botonNueva\" was not injected: check your FXML file 'PantallaSeleccionLista.fxml'.";
		assert listas != null : "fx:id=\"listas\" was not injected: check your FXML file 'PantallaSeleccionLista.fxml'.";
		this.usuario = LogicaPrincipal.getInstance().getUser();

	}

	private class CeldaListas extends ListCell<modeloVista.Lista> {
		private HBox content;
		private Text name;
		private Text price;
		private Text separador;

		public CeldaListas() {
			super();
			name = new Text();
			name.setFont(Font.font(25));
			price = new Text();
			price.setFont(Font.font(20));
			separador = new Text("      ");
			VBox vBox = new VBox(name, price);
			VBox vbox2 = new VBox(separador);
			content = new HBox(vbox2, vBox);
			content.setSpacing(100);
		}

		@Override
		protected void updateItem(modeloVista.Lista item, boolean empty) {
			super.updateItem(item, empty);
			if (item != null && !empty) { // <== test for null item and empty parameter
				name.setText(item.getNombre());

				price.setText(String.format("%d Puntos", item.getCoste()));
				content = new HBox(new HBox(name, separador, price));
				setGraphic(content);
			} else {
				setGraphic(null);
			}
		}
	}

}
